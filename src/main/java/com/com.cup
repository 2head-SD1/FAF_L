// -*- Java -*- This Cup file was machine-generated by BNFC
package com;

parser code {:
  public com.Absyn.ProgramExprs pProgramExprs() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (com.Absyn.ProgramExprs) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal com.Absyn.ProgramExprs ProgramExprs;
nonterminal com.Absyn.ListExpr ListExpr;
nonterminal com.Absyn.Expr Expr;
nonterminal com.Absyn.Params Params;
nonterminal com.Absyn.ListParams ListParams;
nonterminal com.Absyn.ListInteger ListInteger;
nonterminal com.Absyn.Type Type;

terminal _SYMB_0;    //   ;
terminal _SYMB_1;    //   (
terminal _SYMB_2;    //   )
terminal _SYMB_3;    //   ,
terminal _SYMB_4;    //   ->
terminal _SYMB_5;    //   Bool
terminal _SYMB_6;    //   Int
terminal _SYMB_7;    //   String
terminal _SYMB_8;    //   minus
terminal _SYMB_9;    //   plus
terminal _SYMB_10;    //   setq



terminal Integer _INTEGER_;

terminal String _IDENT_;



start with ProgramExprs;


ProgramExprs ::= ListExpr:p_1  {: RESULT = new com.Absyn.Program(p_1); :} 
;
ListExpr ::=  /* empty */  {: RESULT = new com.Absyn.ListExpr(); :} 
  | Expr:p_1  {: RESULT = new com.Absyn.ListExpr(); RESULT.addLast(p_1); :}
  | Expr:p_1 _SYMB_0 ListExpr:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Expr ::= _SYMB_9 _SYMB_1 ListParams:p_3 _SYMB_2  {: RESULT = new com.Absyn.Plus(p_3); :} 
  | _SYMB_8 _SYMB_1 ListParams:p_3 _SYMB_2  {: RESULT = new com.Absyn.Minus(p_3); :}
  | _SYMB_10 _SYMB_1 _IDENT_:p_3 _SYMB_4 Type:p_5 _SYMB_2 Expr:p_7  {: RESULT = new com.Absyn.Assign(p_3,p_5,p_7); :}
;
Params ::= _INTEGER_:p_1  {: RESULT = new com.Absyn.ParametersInteger(p_1); :} 
  | Expr:p_1  {: RESULT = new com.Absyn.ParametersFunctions(p_1); :}
  | _IDENT_:p_1  {: RESULT = new com.Absyn.ParametersIdents(p_1); :}
;
ListParams ::=  /* empty */  {: RESULT = new com.Absyn.ListParams(); :} 
  | Params:p_1  {: RESULT = new com.Absyn.ListParams(); RESULT.addLast(p_1); :}
  | Params:p_1 _SYMB_3 ListParams:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListInteger ::=  /* empty */  {: RESULT = new com.Absyn.ListInteger(); :} 
  | _INTEGER_:p_1  {: RESULT = new com.Absyn.ListInteger(); RESULT.addLast(p_1); :}
  | _INTEGER_:p_1 _SYMB_3 ListInteger:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Type ::= _SYMB_5  {: RESULT = new com.Absyn.BoolType(); :} 
  | _SYMB_6  {: RESULT = new com.Absyn.IntType(); :}
  | _SYMB_7  {: RESULT = new com.Absyn.StringType(); :}
;

